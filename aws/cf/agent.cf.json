{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create a stack that runs Chroma hosted on a single instance",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "ConstraintDescription": "If present, must be the name of an existing EC2 KeyPair.",
      "Default": ""
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t3.small"
    },
    "ChromaVersion": {
      "Description": "Chroma version to install",
      "Type": "String",
      "Default": "0.3.21"
    }
  },
  "Conditions": {
    "HasKeyName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "KeyName"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "ChromaInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "Region2AMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "Content-Type: multipart/mixed; boundary=\"//\"\n",
                "MIME-Version: 1.0\n",
                "\n",
                "--//\n",
                "Content-Type: text/cloud-config; charset=\"us-ascii\"\n",
                "MIME-Version: 1.0\n",
                "Content-Transfer-Encoding: 7bit\n",
                "Content-Disposition: attachment; filename=\"cloud-config.txt\"\n",
                "\n",
                "\n",
                "#cloud-config\n",
                "cloud_final_modules:\n",
                "- [scripts-user, always]\n",
                "\n",
                "\n",
                "--//\n",
                "Content-Type: text/x-shellscript
                                          "      <path>/backups</path>\n",
                        "      <remove_older_than>7d</remove_older_than>\n",
                        "      <min_free_space_ratio>0.1</min_free_space_ratio>\n",
                        "      <clickhouse></clickhouse>\n",
                        "    </path>\n",
                        "  </disks>\n",
                        "</backups>\n",
                        "EOF\n",
                        "\n",
                        "cat << EOF > /home/ec2-user/config/chroma_users.xml\n",
                        "<yandex>\n",
                        "  <profiles>\n",
                        "    <default>\n",
                        "      <max_memory_usage_to_ram_ratio>0.4</max_memory_usage_to_ram_ratio>\n",
                        "    </default>\n",
                        "  </profiles>\n",
                        "  <users>\n",
                        "    <chroma>\n",
                        "      <password_sha256_hex>498d92d164cd7ca9b0e74032f777e737c94be24688a3db3d3c98d43a81737ecb</password_sha256_hex>\n",
                        "      <networks>\n",
                        "        <ip>::/0</ip>\n",
                        "      </networks>\n",
                        "    </chroma>\n",
                        "  </users>\n",
                        "</yandex>\n",
                        "EOF\n",
                        "\n",
                        "chown -R ec2-user:ec2-user /home/ec2-user\n",
                        "\n",
                        "docker-compose -f /home/ec2-user/docker-compose.yml up -d\n",
                        "\n",
                        "echo \"Chroma instance is running. Access Chroma at: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):8000\"\n",
                            "  ]\n",
                            "}\n"
                        ]
                    }
                }
            },
            "Tags": [
                {
                    "Key": "Name",
                    "Value": "ChromaInstance"
                }
            ]
        }
    }
},
"Outputs": {
    "ChromaInstancePublicIP": {
        "Description": "Public IP address of the Chroma instance",
        "Value": {
            "Fn::If": [
                "HasKeyName",
                {
                    "Fn::GetAtt": [
                        "ChromaInstance",
                        "PublicIp"
                    ]
                },
                {
                    "Fn::Join": [
                        "",
                        [
                            "Use KeyName parameter to get the Public IP address of the Chroma instance."
                        ]
                    ]
                }
            ]
        }
    }
},
"Mappings": {
    "Region2AMI": {
        "us-east-1": {
            "AMI": "ami-0c55b159cbfafe1f0"
        },
        "us-west-2": {
            "AMI": "ami-0c95b1c99c71c99f7"
        },
        "eu-west-1": {
            "AMI": "ami-04c47937c1ca413f0"
        }
    }
}
